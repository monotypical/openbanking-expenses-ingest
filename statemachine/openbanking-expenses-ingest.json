{
    "Comment": "Gets bank transactions from OpenBanking via GoCardless and exports them to a google sheet",
    "StartAt": "Get SSM Parameters",
    "States": {
      "Get SSM Parameters": {
        "Type": "Task",
        "Next": "Update API Credentials",
        "Parameters": {
          "Names": [
            "/GoCardless/Access-Token",
            "/GoCardless/Access-Token-Expires",
            "/GoCardless/Refresh-Token",
            "/GoCardless/Refresh-Token-Expires"
          ]
        },
        "Resource": "arn:aws:states:::aws-sdk:ssm:getParameters",
        "ResultSelector": {
          "AccessToken": {
            "Value.$": "$.Parameters[0].Value",
            "Expires.$": "$.Parameters[1].Value"
          },
          "RefreshToken": {
            "Value.$": "$.Parameters[2].Value",
            "Expires.$": "$.Parameters[3].Value"
          }
        }
      },
      "Update API Credentials": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "FunctionName": "${UpdateApiCredentialsFunctionARN}:$LATEST",
          "Payload": {
            "AccessToken": {
              "Value.$": "$.AccessToken.Value",
              "Expires.$": "$.AccessToken.Expires"
            },
            "RefreshToken": {
                "Value.$": "$.RefreshToken.Value",
                "Expires.$": "$.RefreshToken.Expires"
            },
            "SecretIdParam": "${SecretIdParamName}",
            "SecretKeyParam": "${SecretKeyParamName}"
          }
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "End": true
      }
    }
  }