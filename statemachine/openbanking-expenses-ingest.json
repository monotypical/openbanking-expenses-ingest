{
    "Comment": "Gets bank transactions from OpenBanking via GoCardless and exports them to a google sheet",
    "StartAt": "Get API Credential SSM Parameters",
    "States": {
      "Get API Credential SSM Parameters": {
        "Type": "Task",
        "Next": "Update API Credentials",
        "Parameters": {
          "Names": [
            "${AccessTokenParamName}",
            "${AccessTokenExpiresParamName}",
            "${RefreshTokenParamName}",
            "${RefreshTokenExpiresParamName}"
          ],
          "WithDecryption": true
        },
        "Resource": "arn:aws:states:::aws-sdk:ssm:getParameters",
        "ResultSelector": {
          "AccessToken": {
            "Value.$": "$.Parameters[0].Value",
            "Expires.$": "$.Parameters[1].Value"
          },
          "RefreshToken": {
            "Value.$": "$.Parameters[2].Value",
            "Expires.$": "$.Parameters[3].Value"
          }
        }
      },
      "Update API Credentials": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "FunctionName": "${UpdateApiCredentialsFunctionARN}:$LATEST",
          "Payload": {
            "AccessToken": {
              "Value.$": "$.AccessToken.Value",
              "Expires.$": "$.AccessToken.Expires"
            },
            "RefreshToken": {
                "Value.$": "$.RefreshToken.Value",
                "Expires.$": "$.RefreshToken.Expires"
            },
            "SecretIdParam": "${SecretIdParamName}",
            "SecretKeyParam": "${SecretKeyParamName}"
          }
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Update API Credentials SSM Params"
      },
      "Update API Credentials SSM Params": {
        "Type": "Parallel",
        "Branches": [
          {
            "StartAt": "Update Access Token If Updated",
            "States": {
              "Update Access Token If Updated": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.AccessToken.Updated",
                    "BooleanEquals": true,
                    "Next": "Update Access Token SSM Param"
                  },
                  {
                    "Variable": "$.AccessToken.Updated",
                    "BooleanEquals": false,
                    "Next": "Don't Update Access Token SSM Param"
                  }
                ],
                "Default": "Update Access Token SSM Param"
              },
              "Update Access Token SSM Param": {
                "Type": "Task",
                "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
                "Parameters": {
                  "Name": "${AccessTokenParamName}",
                  "Value.$": "$.AccessToken.Value",
                  "Type": "SecureString",
                  "KeyId": "${SsmKeyId}",
                  "Overwrite": true
                },
                "ResultPath": null,
                "Next": "Update Access Token Expiration"
              },
              "Update Access Token Expiration": {
                "Type": "Task",
                "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
                "Parameters": {
                  "Name": "${AccessTokenExpiresParamName}",
                  "Value.$": "States.Format('\"{}\"', $.AccessToken.Expires)",
                  "Type": "String",
                  "Overwrite": true
                },
                "ResultPath": null,
                "End": true
              },
              "Don't Update Access Token SSM Param": {
                "Type": "Pass",
                "End": true
              }
            }
          },
          {
            "StartAt": "Update Refresh Token If Updated",
            "States": {
              "Update Refresh Token If Updated": {
                "Type": "Choice",
                "Choices": [
                  {
                    "Variable": "$.RefreshToken.Updated",
                    "BooleanEquals": true,
                    "Next": "Update Refresh Token SSM Param"
                  },
                  {
                    "Variable": "$.RefreshToken.Updated",
                    "BooleanEquals": false,
                    "Next": "Don't Update Refresh Token SSM Param"
                  }
                ],
                "Default": "Update Refresh Token SSM Param"
              },
              "Update Refresh Token SSM Param": {
                "Type": "Task",
                "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
                "Parameters": {
                  "Name": "${RefreshTokenParamName}",
                  "Value.$": "$.RefreshToken.Value",
                  "Type": "SecureString",
                  "KeyId": "${SsmKeyId}",
                  "Overwrite": true
                },
                "ResultPath": null,
                "Next": "Update Refresh Token Expiration"
              },
              "Update Refresh Token Expiration": {
                "Type": "Task",
                "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
                "Parameters": {
                  "Name": "${RefreshTokenExpiresParamName}",
                  "Value.$": "States.Format('\"{}\"', $.RefreshToken.Expires)",
                  "Type": "String",
                  "Overwrite": true
                },
                "ResultPath": null,
                "End": true
              },
              "Don't Update Refresh Token SSM Param": {
                "Type": "Pass",
                "End": true
              }
            }
          }
        ],
        "ResultPath": null,
        "Next": "Get Requisition Reference From SSM"
      },
      "Get Requisition Reference From SSM": {
        "Type": "Task",
        "Parameters": {
          "Name": "/GoCardless/Requisition-Reference",
          "WithDecryption": true
        },
        "Resource": "arn:aws:states:::aws-sdk:ssm:getParameter",
        "ResultPath": "$.Requisition",
        "ResultSelector": {
          "Reference.$": "$.Parameter.Value"
        },
        "Next": "Update Requisition"
      },
      "Update Requisition": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
        "Parameters": {
          "FunctionName": "${UpdateRequisitionFunctionARN}:$LATEST",
          "Payload": {
            "AccessToken.$": "$.AccessToken",
            "Requisition": {
              "Reference.$": "$.Requisition.Reference",
              "TableName": "${RequisitionTableName}"
            },
            "Bank": {
              "Name": "${BankName}",
              "Country": "${BankCountry}"
            },
            "TaskToken.$": "$$.Task.Token",
            "NotificationTopicARN": "${RequisitionNotificationTopicARN}",
            "RequisitionCompleteCallbackURL": "${RequisitionCompleteEndpointUrl}"
          }
        },
        "ResultPath": "$.Requisition",
        "Next": "Update Requisition SSM Param If Updated"
      },
      "Update Requisition SSM Param If Updated": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.Requisition.Updated",
            "BooleanEquals": true,
            "Next": "Update Requisition SSM Param"
          },
          {
            "Variable": "$.Requisition.Updated",
            "BooleanEquals": false,
            "Next": "Don't Update Requisition SSM Param"
          }
        ],
        "Default": "Update Requisition SSM Param"
      },
      "Update Requisition SSM Param": {
        "Type": "Task",
        "Resource": "arn:aws:states:::aws-sdk:ssm:putParameter",
        "Parameters": {
          "Name": "${RequisitionReferenceParamName}",
          "Value.$": "$.Requisition.Reference",
          "Type": "SecureString",
          "KeyId": "${SsmKeyId}",
          "Overwrite": true
        },
        "Next": "Get API Credential SSM Parameters"
      },
      "Don't Update Requisition SSM Param": {
        "Type": "Pass",
        "End": true
      }
    }
  }